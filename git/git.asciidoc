= A List of +git+ Tips, Tricks and Idioms
:Author:                Christoph Hoffmann
:Email:                 choffmann1983@gmail.com
:Revision:              0.0.1 'http://semver.org/[(semver)]
:source-highlighter:    highlight
:numbered:
:toc:                   // set table of content
:icons:                 // search for icons in :inconsdir: (default: ./images/icons.)
:iconsdir:              ../asciidoc/images/icons
:imagesdir:             ../asciidoc/images/
// :scriptsdir:            ../asciidoc/js
// :linkcss:

:language:              python

== Introduction

TODO

== Creating a bare repository

It's not possible to push to a repository which is not a bare repository since there might be a working 
branch and a `push` to this repository can end up in a total mess.

The normal procedure in this case would be that the one how wants to push changes to the other repository
issues a pull request and the admin of the other repository pullls then all changes from the other peer. 

However, if you want to a common repository where you can push and pull from, there are a couple of ways 
to do so. This can be done locally or a network location.

To create a bare repository (like that ones on github) you can either execute following commands:

.Creating a new bare repository 
[source,shell]
--------------------------
mkdir myrepo.git
cd myrepo.git
git init --bare
--------------------------

or if you want to transform a working repository into a remote repository where you can push something
to you can issue the following commands:

.Convert a working repository into a bare repository
[source,shell]
--------------------------
cd myrepo.git
git config --bool core.bare true
ls | grep -v .git  | xargs rm -rf    # <1>
--------------------------
<1> remove everything expect the `.git` folder

one other resort could be to create a specific branch to the remote repository which is not checkedout
at the remote repository. Then it is possible to push to this branch.

== Commit template

To ensure that every https://www.kernel.org/pub/software/scm/git/docs/git-commit.html[commit] message has the same structure and to meet widely accepted and approved committing messages structure and formatting it should be configure a default commit message by creating a commit template.

See http://www.layt.net/john/blog/odysseus/git_commit_template[git_commit_template] for further readings



== Workflow: creating repository on remote

.Creating git repository on remote
--------------------------
ssh user@host
cd <path/to/project/folder>
mkdir <repo.git>
cd <repo.git>
git init --bare
--------------------------

Using on local machine: Either clone from remote or create local git repository and add remote as origin.

.Cloning from remote
--------------------------
git clone ssh://user@host/path/to/repo.git
--------------------------

.Existing project (useful if there are already some files to commit)
--------------------------
cd path/to/project/
git init
git remote add origin host/path/to/repo.git
--------------------------


== Adding remote addresses

`git remote add $REMOTE_NAME $ADDRESS`

$ADDRESS can be one of the following:

* http://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git
* ssh://user@host.com/var/git/project.git
* git://git.debian.org/collab-maint/usplash.git
* file:///var/git/project.git


//////////////////////////
CommentBlock:     //////////////////////////
PassthroughBlock: ++++++++++++++++++++++++++
ListingBlock:     --------------------------
LiteralBlock:     ..........................
SidebarBlock:     **************************
QuoteBlock:       __________________________
ExampleBlock:     ==========================
OpenBlock:        --
//////////////////////////
